name: Frontend CI/CD

on:
  push:
    branches: [ main ]
    paths:
      - 'app/**'
      - '.github/workflows/frontend.yml'
  pull_request:
    branches: [ main ]
    paths:
      - 'app/**'
      - '.github/workflows/frontend.yml'

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: app/package-lock.json

      - name: Install dependencies
        working-directory: app
        run: npm ci

      - name: Run linter
        working-directory: app
        run: npm run lint

      - name: Run type check
        working-directory: app
        run: npm run type-check

      - name: Run tests
        working-directory: app
        run: npm run test:coverage

      - name: Upload coverage reports
        uses: codecov/codecov-action@v3
        with:
          directory: app/coverage

  build:
    needs: test
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'

    steps:
      - uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ secrets.REGISTRY }}
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_PASSWORD }}

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: app
          push: true
          tags: |
            ${{ secrets.REGISTRY }}/${{ secrets.REPOSITORY }}-frontend:latest
            ${{ secrets.REGISTRY }}/${{ secrets.REPOSITORY }}-frontend:${{ github.sha }}
          cache-from: type=registry,ref=${{ secrets.REGISTRY }}/${{ secrets.REPOSITORY }}-frontend:buildcache
          cache-to: type=registry,ref=${{ secrets.REGISTRY }}/${{ secrets.REPOSITORY }}-frontend:buildcache,mode=max

  deploy:
    needs: build
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'

    steps:
      - name: Deploy to production
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.DEPLOY_HOST }}
          username: ${{ secrets.DEPLOY_USER }}
          key: ${{ secrets.DEPLOY_KEY }}
          script: |
            cd /opt/notio
            echo "TAG=${{ github.sha }}" >> .env
            docker compose -f docker-compose.prod.yml pull app
            docker compose -f docker-compose.prod.yml up -d app 