name: Публикация

on:
  push:
    tags:
      - 'v*'

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-push:
    name: Сборка и публикация Docker-образов
    runs-on: ubuntu-latest
    strategy:
      matrix:
        package: [app, api]
        include:
          - package: app
            dockerfile: app/Dockerfile
            image_suffix: frontend
          - package: api
            dockerfile: api/Dockerfile
            image_suffix: backend

    permissions:
      contents: read
      packages: write

    steps:
      - uses: actions/checkout@v4

      - name: Установка QEMU
        uses: docker/setup-qemu-action@v3

      - name: Установка Buildx
        uses: docker/setup-buildx-action@v3

      - name: Логин в GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Извлечение метаданных
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}-${{ matrix.image_suffix }}
          tags: |
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=sha,prefix=

      - name: Сборка и публикация
        uses: docker/build-push-action@v5
        with:
          context: ./${{ matrix.package }}
          file: ${{ matrix.dockerfile }}
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  build-electron:
    name: Сборка Electron-приложения
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest, windows-latest]
        include:
          - os: macos-latest
            platform: mac
          - os: ubuntu-latest
            platform: linux
          - os: windows-latest
            platform: win

    steps:
      - uses: actions/checkout@v4

      - name: Установка Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Установка зависимостей
        working-directory: ./electron
        run: npm ci

      - name: Сборка приложения
        working-directory: ./electron
        run: npm run build

      - name: Сборка дистрибутива
        working-directory: ./electron
        run: npm run dist
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Загрузка артефактов
        uses: actions/upload-artifact@v3
        with:
          name: electron-${{ matrix.platform }}
          path: electron/release/* 