name: Проверка кода

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  check:
    name: Проверка типов и линтинг
    runs-on: ubuntu-latest
    strategy:
      matrix:
        package: [app, api, electron]

    steps:
      - uses: actions/checkout@v4

      - name: Установка Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Установка зависимостей
        working-directory: ./${{ matrix.package }}
        run: npm ci

      - name: Проверка типов
        working-directory: ./${{ matrix.package }}
        run: npm run type-check

      - name: Линтинг
        working-directory: ./${{ matrix.package }}
        run: npm run lint

  test:
    name: Тесты
    runs-on: ubuntu-latest
    strategy:
      matrix:
        package: [app, api]

    services:
      postgres:
        image: postgres:16-alpine
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: notio_test
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

      redis:
        image: redis:7-alpine
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v4

      - name: Установка Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Установка зависимостей
        working-directory: ./${{ matrix.package }}
        run: npm ci

      - name: Генерация Prisma клиента
        if: matrix.package == 'api'
        working-directory: ./api
        run: npm run prisma:generate

      - name: Запуск тестов
        working-directory: ./${{ matrix.package }}
        run: npm run test:coverage
        env:
          NODE_ENV: test
          DATABASE_URL: postgresql://postgres:postgres@localhost:5432/notio_test
          REDIS_URL: redis://localhost:6379
          JWT_SECRET: test-secret
          JWT_EXPIRES_IN: 1h 